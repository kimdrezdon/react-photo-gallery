{"version":3,"sources":["config.js","Components/Nav.js","Components/SearchForm.js","Components/Header.js","Components/Image.js","Components/NoResults.js","Components/Loading.js","Components/ImageGallery.js","Components/Error.js","Components/App.js","serviceWorker.js","index.js"],"names":["apiKey","Nav","react_default","a","createElement","className","react_router_dom","to","SearchForm","state","searchText","onSearchChange","e","_this","setState","target","value","handleSubmit","preventDefault","query","toLowerCase","props","onSearch","path","concat","history","push","currentTarget","reset","_this2","this","onSubmit","type","onChange","name","ref","input","placeholder","required","fill","height","viewBox","width","xmlns","d","Component","Header","Components_SearchForm","Components_Nav","Image","src","url","alt","title","NoResults","Loading","ImageGallery","images","results","loading","Components_Loading","length","map","image","Components_Image","farm","server","id","secret","key","Components_NoResults","Error","App","searchImages","amalfiImages","hallstatImages","santoriniImages","performSearch","axios","get","then","response","responseData","data","photos","photo","catch","error","console","log","react_router","render","Components_Header","Object","assign","exact","Components_ImageGallery","_ref","match","params","topic","component","Boolean","window","location","hostname","ReactDOM","Components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.742e88a9.chunk.js","sourcesContent":["const apiKey = '621c0916177d75bf0f1f23fbbcd38a6d';\nexport default apiKey;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = () => {\n    /**\n     * Returns the navigation buttons for the three default topics.\n     */\n    return (\n        <nav className=\"main-nav\">\n            <ul>\n                <li><NavLink to=\"/amalficoast\">Amalfi Coast</NavLink></li>\n                <li><NavLink to=\"/hallstat\">Hallstat</NavLink></li>\n                <li><NavLink to=\"/santorini\">Santorini</NavLink></li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Nav;","import React, {Component} from 'react';\n\nclass SearchForm extends Component {\n    /**\n     * Establishes state of the search input.\n     */\n    state = {\n        searchText: ''\n    }\n\n    /**\n     * Continuously updates the state of the search input to the value entered by the user.\n     */\n    onSearchChange = e => {\n        this.setState({ searchText: e.target.value });\n    }\n\n    /**\n     * Prevents default refresh when the search form is submitted. \n     * Passes the user's search input to the App component's performSearch method.\n     * Redirects to the search topic's path by pushing the path to the history object.\n     * Resets the value of the search form.\n     */\n    handleSubmit = e => {\n        e.preventDefault();\n        let searchText = this.query.value.toLowerCase();\n        this.props.onSearch(searchText);\n        let path = `/search/${searchText}`;\n        this.props.history.push(path);\n        e.currentTarget.reset();\n    }\n    \n    render() {   \n        return ( \n            <form className=\"search-form\" onSubmit={this.handleSubmit}>\n                <input \n                    type=\"search\" \n                    onChange={this.onSearchChange}\n                    name=\"search\" \n                    ref={(input) => this.query = input}\n                    placeholder=\"Search for a destination\" \n                    required />\n                <button type=\"submit\" className=\"search-button\">\n                    <svg\n                        fill=\"#fff\"\n                        height=\"24\"\n                        viewBox=\"0 0 23 23\"\n                        width=\"24\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                        d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n                        />\n                        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    </svg>\n                </button>\n            </form>\n        );\n    }\n}\n \nexport default SearchForm;","import React from 'react';\nimport Nav from './Nav';\nimport SearchForm from './SearchForm';\n\nconst Header = (props) => {\n    /**\n     * Returns the app title, SearchForm component and Nav component.\n     */\n    return (\n        <div className=\"nav-container\">\n            <h1>Wanderlust</h1>\n            <h3>A Photo Gallery to Inspire Your Travels</h3>\n            <SearchForm history={props.history} onSearch={props.onSearch}/>\n            <Nav />\n        </div>\n    );\n}\n \nexport default Header;","import React from 'react';\n\nconst Image = (props) => {\n    /**\n     * Returns an image\n     */\n    return (  \n        <li>\n            <img\n            src={props.url}\n            alt={props.title}\n            />\n        </li>\n    );\n}\n \nexport default Image;","import React from 'react';\n\nconst NoResults = () => {\n    /**\n     * Returns a no results message when the user's search didn't yield any results.\n     */\n    return (  \n        <li className=\"no-results\">\n            <h3>No Results Found!</h3>\n            <p>Your search did not return any results. Please try again.</p>\n        </li>\n    );\n}\n \nexport default NoResults;","import React from 'react';\n\nconst Loading = () => {\n    /**\n     * Returns a loading message while the data is still being fetched from the API.\n     */\n    return (  \n        <div className=\"loading\">\n            <h3>Loading...</h3>\n        </div>\n    );\n}\n \nexport default Loading;","import React from 'react';\nimport Image from './Image';\nimport NoResults from './NoResults';\nimport Loading from './Loading';\n\nconst ImageGallery = (props) => {\n    /**\n     * Sets results to the images array from the App state.\n     * If the loading state is true, the Loading component is returned.\n     * If the loading state is false, and the search was able to find images, the images are returned.\n     * If the loading state is false but the search found no matching images, the NoResults component is returned.\n     */\n    const results = props.images;\n    let images;\n    if (props.loading) {\n        images = <Loading />\n    } else {\n        if (results.length > 0) {\n            images = results.map( image => <Image url={`https://farm${image.farm}.staticflickr.com/${image.server}/${image.id}_${image.secret}.jpg`} title={image.title} key={image.id} />)\n        } else {\n            images = <NoResults />\n        }\n    }   \n    \n    return (  \n        <div className=\"photo-container\">\n            <h2>{props.title}</h2>\n            <ul>\n                {images}\n            </ul>\n        </div>\n    );\n}\n \nexport default ImageGallery;","import React from 'react';\n\nconst Error = () => {\n    /**\n     * Returns an error message when the path doesn't exist.\n     */\n    return (  \n        <div className=\"error\">\n            <h3>404: Page Not Found!</h3>\n            <p>Sorry, we could not find the page you were looking for.</p>\n        </div>\n    );\n}\n \nexport default Error;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport apiKey from '../config.js'\nimport axios from 'axios';\n\n//App components\nimport Header from './Header';\nimport ImageGallery from './ImageGallery';\nimport Error from './Error';\n\nclass App extends Component {\n  /**\n   * Sets state of three default image topics and search to empty arrays. Sets state of loading to true since the data has not loaded yet.\n   */\n  state = { \n    searchImages: [],\n    amalfiImages: [],\n    hallstatImages: [],\n    santoriniImages: [],\n    loading: true\n  }\n\n  /**\n   * Runs the performSearch method for each of the three default image topics after the App component has mounted.\n   */\n  componentDidMount() {\n    this.performSearch('amalfi%20coast');\n    this.performSearch('hallstat');\n    this.performSearch('santorini');\n  }\n\n  /**\n   * Sets the loading state back to true. \n   * Fetches the photo data from the Flickr API using Axios. \n   * Sets the state of the image array to the response photo data depending on the search query passed to it. \n   * Sets the loading state to false.\n   */\n  performSearch = (query) => {\n    this.setState({ loading: true });\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&text=${query}&sort=interestingness-desc&safe_search=1&content_type=1&per_page=24&format=json&nojsoncallback=1`)\n    .then(response => {\n      let responseData = response.data.photos.photo;\n      if (query === 'amalfi%20coast') {\n        this.setState({ amalfiImages: responseData })\n      } else if (query === 'hallstat') {\n        this.setState({ hallstatImages: responseData })\n      } else if (query === 'santorini') {\n        this.setState({ santoriniImages: responseData })\n      } else {\n        this.setState({ searchImages: responseData });\n      }\n      this.setState({ loading: false });\n    })\n    .catch(error => {\n      console.log('Error fetching data', error);\n    });\n  }\n\n  /**\n   * Renders the Header component on all paths, passing ...props in order to access the history object. \n   * The path determines which images to load in the ImageGallery component being rendered.\n   * Switch routes to the Error component if none of the previous paths match.\n   * The home path automatically redirects to a path of one of the three default topics. \n   */\n  render() { \n    return ( \n      <BrowserRouter>\n        <div className=\"container\">\n          <Route path=\"/\" render={ (props) => <Header {...props} onSearch={this.performSearch} /> } />\n          <Switch>\n            <Route exact path=\"/\" render={ () => <Redirect to=\"/hallstat\" /> } />\n            <Route path=\"/amalficoast\" render={() => <ImageGallery loading={this.state.loading} images={this.state.amalfiImages} title={'Amalfi Coast Photos'} />} />\n            <Route path=\"/hallstat\" render={() => <ImageGallery images={this.state.hallstatImages} title={'hallstat Photos'} />} />\n            <Route path=\"/santorini\" render={() => <ImageGallery images={this.state.santoriniImages} title={'Santorini Photos'} />} />\n            <Route path='/search/:topic' render={({match}) => <ImageGallery loading={this.state.loading} images={this.state.searchImages} title={`${match.params.topic} Photos`} /> } />\n            <Route component={Error} />\n          </Switch>\n        </div>\n      </BrowserRouter> \n    );\n  }\n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}